{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "http://json.schemastore.org/knativeeventing",
    "title": "Knative Eventing",
    "description": "Knative CRD schemas ",
    "definitions": {
        "apiVersion": {
            "type": "string",
            "description": "Custom resource API version, e.g. eventing.knative.dev/v1beta1",
            "minLength": 5
        },
        "kind": {
            "type": "string",
            "description": "Custom resource kind, e.g. Broker",
            "minLength": 3
        },
        "metadata": {
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "$ref": "https://kubernetesjsonschema.dev/v1.15.0/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
            "required": [
                "name"
            ]
        },
        "eventing.knative.dev.v1beta1.BrokerSpec": {
            "type": "object",
            "required": [
                "config"
            ],
            "properties": {
                "config": {
                    "type": "object",
                    "description": "Reference to the configuration for the Broker.",
                    "required": [
                        "apiVersion",
                        "kind",
                        "name"
                    ],
                    "properties": {
                        "apiVersion": {
                            "type": "string",
                            "description": "API version of the configuration.",
                            "minLength": 1
                        },
                        "kind": {
                            "type": "string",
                            "description": "Kind of the configuration.",
                            "minLength": 1
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the configuration.",
                            "minLength": 1
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace of the configuration.",
                            "minLength": 1
                        }
                    }
                },
                "delivery": {
                    "description": "Broker delivery options. More information: https://knative.dev/docs/eventing/event-delivery.",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                }
            }
        },
        "eventing.knative.dev.v1beta1.BrokerStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                }
            }
        },
        "eventing.knative.dev.v1beta1.Broker": {
            "x-kubernetes-group-version-kind": [
                {
                    "kind": "Broker",
                    "version": "v1beta1",
                    "group": "eventing.knative.dev"
                }
            ],
            "description": "eventing.knative.dev.v1beta1.Broker",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "$ref": "#/definitions/apiVersion"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.",
                    "type": "string",
                    "enum": [
                        "Broker"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "spec": {
                    "description": "Specification. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/eventing.knative.dev.v1beta1.BrokerSpec"
                },
                "status": {
                    "description": "Most recently observed status. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/eventing.knative.dev.v1beta1.BrokerStatus"
                }
            }
        },
        "eventing.knative.dev.v1beta1.TriggerSpec": {
            "required": [
                "subscriber"
            ],
            "type": "object",
            "properties": {
                "broker": {
                    "type": "string",
                    "description": "Broker that this trigger receives events from. If not specified, will default to 'default'."
                },
                "filter": {
                    "type": "object",
                    "properties": {
                        "attributes": {
                            "type": "object",
                            "description": "Map of CloudEvents attributes used for filtering events.",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                },
                "subscriber": {
                    "type": "object",
                    "description": "the destination that should receive events.",
                    "properties": {
                        "ref": {
                            "type": "object",
                            "description": "a reference to a Kubernetes object from which to retrieve the target URI.",
                            "required": [
                                "apiVersion",
                                "kind",
                                "name"
                            ],
                            "properties": {
                                "apiVersion": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "kind": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "name": {
                                    "type": "string",
                                    "minLength": 1
                                }
                            }
                        },
                        "uri": {
                            "type": "string",
                            "description": "the target URI or, if ref is provided, a relative URI reference that will be combined with ref to produce a target URI."
                        }
                    }
                }
            }
        },
        "eventing.knative.dev.v1beta1.TriggerStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                }
            }
        },
        "eventing.knative.dev.v1beta1.Trigger": {
            "x-kubernetes-group-version-kind": [
                {
                    "kind": "Trigger",
                    "version": "v1beta1",
                    "group": "eventing.knative.dev"
                }
            ],
            "description": "eventing.knative.dev.v1beta1.Trigger",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "$ref": "#/definitions/apiVersion"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.",
                    "type": "string",
                    "enum": [
                        "Trigger"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "spec": {
                    "description": "Specification. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/eventing.knative.dev.v1beta1.TriggerSpec"
                },
                "status": {
                    "description": "Most recently observed status. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/eventing.knative.dev.v1beta1.TriggerStatus"
                }
            }
        },
        "messaging.knative.dev.v1bete1.InMemoryChannel": {
            "x-kubernetes-group-version-kind": [
                {
                    "kind": "InMemoryChannel",
                    "version": "v1beta1",
                    "group": "messaging.knative.dev"
                }
            ],
            "description": "messaging.knative.dev.v1bete1.InMemoryChannel",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "$ref": "#/definitions/apiVersion"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.",
                    "type": "string",
                    "enum": [
                        "InMemoryChannel"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                }
            }
        },
        "sources.knative.dev.v1alpha1.CamelSourceSpec": {
            "properties": {
                "sink": {
                    "type": "object",
                    "description": "Reference to an object that will resolve to a domain name to use as the sink."
                },
                "ceOverrides": {
                    "type": "object",
                    "description": "Defines overrides to control modifications of the event sent to the sink."
                },
                "source": {
                    "properties": {
                        "flow": {
                            "type": "object"
                        },
                        "integration": {
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "source"
            ],
            "type": "object"
        },
        "sources.knative.dev.v1alpha1.CamelSourceStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "properties": {
                        "conditions": {
                            "items": {
                                "properties": {
                                    "lastTransitionTime": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "reason": {
                                        "type": "string"
                                    },
                                    "severity": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type",
                                    "status"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "sinkUri": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            }
        },
        "sources.knative.dev.v1alpha1.CamelSource": {
            "x-kubernetes-group-version-kind": [
                {
                    "kind": "CamelSource",
                    "version": "v1alpha1",
                    "group": "sources.knative.dev"
                }
            ],
            "description": "sources.knative.dev.v1alpha1.CamelSource",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "$ref": "#/definitions/apiVersion"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.",
                    "type": "string",
                    "enum": [
                        "CamelSource"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "spec": {
                    "description": "Specification. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/sources.knative.dev.v1alpha1.CamelSourceSpec"
                },
                "status": {
                    "description": "Most recently observed status. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/sources.knative.dev.v1alpha1.CamelSourceStatus"
                }
            }
        },
        "messaging.knative.dev.v1alpha1.KafkaChannelSpec": {
            "type": "object",
            "required": [
                "numPartitions"
            ],
            "properties": {
                "numPartitions": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Number of partitions of a Kafka topic."
                },
                "replicationFactor": {
                    "format": "int16",
                    "type": "integer",
                    "description": "Replication factor of a Kafka topic."
                },
                "subscribable": {
                    "type": "object",
                    "properties": {
                        "subscribers": {
                            "type": "array",
                            "description": "The list of subscribers that have expressed interest in receiving events from this channel.",
                            "items": {
                                "required": [
                                    "uid"
                                ],
                                "properties": {
                                    "ref": {
                                        "type": "object",
                                        "required": [
                                            "namespace",
                                            "name",
                                            "uid"
                                        ],
                                        "properties": {
                                            "apiVersion": {
                                                "type": "string"
                                            },
                                            "kind": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "namespace": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "uid": {
                                                "type": "string",
                                                "minLength": 1
                                            }
                                        }
                                    },
                                    "uid": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "subscriberURI": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "replyURI": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "messaging.knative.dev.v1alpha1.KafkaChannelStatus": {
            "type": "object",
            "properties": {}
        },
        "messaging.knative.dev.v1alpha1.KafkaChannel": {
            "x-kubernetes-group-version-kind": [
                {
                    "kind": "KafkaChannel",
                    "version": "v1alpha1",
                    "group": "messaging.knative.dev"
                }
            ],
            "description": "messaging.knative.dev.v1alpha1.KafkaChannel",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "$ref": "#/definitions/apiVersion"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.",
                    "type": "string",
                    "enum": [
                        "KafkaChannel"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "spec": {
                    "description": "Specification. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/messaging.knative.dev.v1alpha1.KafkaChannelSpec"
                },
                "status": {
                    "description": "Most recently observed status. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/messaging.knative.dev.v1alpha1.KafkaChannelStatus"
                }
            }
        },
        "messaging.knative.dev.v1beta1.SubscriptionSpec": {
            "required": [
                "channel"
            ],
            "type": "object",
            "properties": {
                "channel": {
                    "type": "object",
                    "description": "Channel that forwards incoming events to the subscription.",
                    "required": [
                        "apiVersion",
                        "kind",
                        "name"
                    ],
                    "properties": {
                        "apiVersion": {
                            "type": "string",
                            "minLength": 1
                        },
                        "kind": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                },
                "subscriber": {
                    "type": "object",
                    "description": "the subscriber that (optionally) processes events.",
                    "properties": {
                        "uri": {
                            "type": "string",
                            "description": "the target URI or, if ref is provided, a relative URI reference that will be combined with ref to produce a target URI.",
                            "minLength": 1
                        },
                        "ref": {
                            "type": "object",
                            "description": "a reference to a Kubernetes object from which to retrieve the target URI.",
                            "required": [
                                "apiVersion",
                                "kind",
                                "name"
                            ],
                            "properties": {
                                "apiVersion": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "kind": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "name": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "namespace": {
                                    "type": "string",
                                    "minLength": 1
                                }
                            }
                        }
                    }
                },
                "reply": {
                    "type": "object",
                    "description": "the destination that (optionally) receive events.",
                    "properties": {
                        "uri": {
                            "type": "string",
                            "description": "the target URI or, if ref is provided, a relative URI reference that will be combined with ref to produce a target URI.",
                            "minLength": 1
                        },
                        "ref": {
                            "type": "object",
                            "description": "a reference to a Kubernetes object from which to retrieve the target URI.",
                            "required": [
                                "apiVersion",
                                "kind",
                                "name"
                            ],
                            "properties": {
                                "apiVersion": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "kind": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "name": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "namespace": {
                                    "type": "string",
                                    "minLength": 1
                                }
                            }
                        }
                    }
                },
                "delivery": {
                    "description": "Subscription delivery options. More information: https://knative.dev/docs/eventing/event-delivery.",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                }
            }
        },
        "messaging.knative.dev.v1beta1.SubscriptionStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                }
            }
        },
        "messaging.knative.dev.v1beta1.Subscription": {
            "x-kubernetes-group-version-kind": [
                {
                    "kind": "Subscription",
                    "version": "v1beta1",
                    "group": "messaging.knative.dev"
                }
            ],
            "description": "messaging.knative.dev.v1beta1.Subscription",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "$ref": "#/definitions/apiVersion"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.",
                    "type": "string",
                    "enum": [
                        "Subscription"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "spec": {
                    "description": "Specification. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/messaging.knative.dev.v1beta1.SubscriptionSpec"
                },
                "status": {
                    "description": "Most recently observed status. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/messaging.knative.dev.v1beta1.SubscriptionStatus"
                }
            }
        },
        "sources.knative.dev.v1alpha1.KafkaSourceSpec": {
            "properties": {
                "bootstrapServers": {
                    "type": "string",
                    "minLength": 1
                },
                "topics": {
                    "type": "string",
                    "minLength": 1
                },
                "consumerGroup": {
                    "type": "string",
                    "minLength": 1
                },
                "net": {
                    "properties": {
                        "sasl": {
                            "properties": {
                                "enable": {
                                    "type": "boolean"
                                },
                                "password": {
                                    "properties": {
                                        "secretKeyRef": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "user": {
                                    "properties": {
                                        "secretKeyRef": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "tls": {
                            "properties": {
                                "caCert": {
                                    "properties": {
                                        "secretKeyRef": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "cert": {
                                    "properties": {
                                        "secretKeyRef": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "enable": {
                                    "type": "boolean"
                                },
                                "key": {
                                    "properties": {
                                        "secretKeyRef": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "resources": {
                    "properties": {
                        "limits": {
                            "properties": {
                                "cpu": {
                                    "type": "string"
                                },
                                "memory": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "requests": {
                            "properties": {
                                "cpu": {
                                    "type": "string"
                                },
                                "memory": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "serviceAccountName": {
                    "type": "string"
                },
                "sink": {
                    "anyOf": [
                        {
                            "type": "object",
                            "description": "the destination that should receive events.",
                            "properties": {
                                "ref": {
                                    "type": "object",
                                    "description": "a reference to a Kubernetes object from which to retrieve the target URI.",
                                    "required": [
                                        "apiVersion",
                                        "kind",
                                        "name"
                                    ],
                                    "properties": {
                                        "apiVersion": {
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "kind": {
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "minLength": 1
                                        }
                                    }
                                },
                                "uri": {
                                    "type": "string",
                                    "description": "the target URI. If ref is provided, this must be relative URI reference."
                                }
                            }
                        },
                        {
                            "type": "object",
                            "description": "DEPRECATED: a reference to a Kubernetes object from which to retrieve the target URI.",
                            "required": [
                                "apiVersion",
                                "kind",
                                "name"
                            ],
                            "properties": {
                                "apiVersion": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "kind": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "name": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "uri": {
                                    "type": "string",
                                    "description": "the target URI. If ref is provided, this must be relative URI reference."
                                }
                            }
                        }
                    ]
                }
            },
            "type": "object",
            "required": [
                "bootstrapServers",
                "topics",
                "consumerGroup"
            ]
        },
        "sources.knative.dev.v1alpha1.KafkaSourceStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "properties": {
                        "conditions": {
                            "items": {
                                "properties": {
                                    "lastTransitionTime": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "reason": {
                                        "type": "string"
                                    },
                                    "severity": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type",
                                    "status"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "observedGeneration": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "sinkUri": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            }
        },
        "sources.knative.dev.v1alpha1.KafkaSource": {
            "x-kubernetes-group-version-kind": [
                {
                    "kind": "KafkaSource",
                    "version": "v1alpha1",
                    "group": "sources.knative.dev"
                }
            ],
            "description": "sources.knative.dev.v1alpha1.KafkaSource",
            "type": "object",
            "properties": {
                "apiVersion": {
                    "$ref": "#/definitions/apiVersion"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.",
                    "type": "string",
                    "enum": [
                        "KafkaSource"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/metadata"
                },
                "spec": {
                    "description": "Specification. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/sources.knative.dev.v1alpha1.KafkaSourceSpec"
                },
                "status": {
                    "description": "Most recently observed status. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                    "$ref": "#/definitions/sources.knative.dev.v1alpha1.KafkaSourceStatus"
                }
            }
        }
    },
    "oneOf": [
        {
            "$ref": "#/definitions/eventing.knative.dev.v1beta1.Broker"
        },
        {
            "$ref": "#/definitions/eventing.knative.dev.v1beta1.Trigger"
        },
        {
            "$ref": "#/definitions/messaging.knative.dev.v1bete1.InMemoryChannel"
        },
        {
            "$ref": "#/definitions/sources.knative.dev.v1alpha1.CamelSource"
        },
        {
            "$ref": "#/definitions/messaging.knative.dev.v1alpha1.KafkaChannel"
        },
        {
            "$ref": "#/definitions/messaging.knative.dev.v1beta1.Subscription"
        },
        {
            "$ref": "#/definitions/sources.knative.dev.v1alpha1.KafkaSource"
        }
    ]
}